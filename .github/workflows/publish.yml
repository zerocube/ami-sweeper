name: Publish NodeJS Package

on:
  push: {}

jobs:

  metadata:
    name: Gather Metadata
    runs-on: ubuntu-20.04
    outputs:
      branch_name: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

  build_and_publish:
    name: "Build and Publish"
    needs: [metadata]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
      packages: write
    steps:

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'
          scope: '@zerocube'

      - run: |
          npm ci
          (cd lib/lambda/ami-sweeper && npm ci && npm run build)
          npm run build

      - name: Update version and publish
        run: |
          git config user.name '${{ github.actor }}'
          git config user.email '${{ github.actor }}@users.noreply.github.com'
          npm version patch
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Update version and publish
        run: |
          git config user.name '${{ github.actor }}'
          git config user.email '${{ github.actor }}@users.noreply.github.com'
          npm version patch
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - run: npm publish --access public --tag ${{ needs.metadata.outputs.branch_name }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTOMATION_TOKEN }}

      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@zerocube'

      - run: npm publish --access public --tag ${{ needs.metadata.outputs.branch_name }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Publish with the latest tag
      - if: ${{ github.ref == '/refs/heads/main' }}
        run: npm publish --access public --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
